<?php

namespace AppBundle\Repository;

/**
 * AdressRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AddressRepository extends \Doctrine\ORM\EntityRepository
{


    public function citiesToString()
    {
        $rc =  $this->createQueryBuilder('c')
            ->select('c.villeSlug')
            ->getQuery()->getResult();

        return $rc;
    }


    public function citiesDataToString($villeSlug)
    {
        $rc =  $this->createQueryBuilder('c')
            ->select('c.villeSlug, c.villeNomReel, c.villeDepartement, c.villeCodeCommune')
            ->where('c.villeSlug = :villeSlug')
            ->setParameter('villeSlug',$villeSlug)
            ->getQuery()->getResult();

        return $rc;
    }


    public function citiesByDep($dep)
    {
        $rc =  $this->createQueryBuilder('c')
            ->select('c.villeSlug, c.villeNomReel, c.villeCodeCommune')
            ->where('c.villeDepartement = :dep')
            ->setParameter('dep',$dep)
            ->getQuery()->getResult();

        return $rc;
    }


    public function getCode($villeSlug)
    {
        $rc =  $this->createQueryBuilder('c')
            ->select('c.villeCodeCommune')
            ->where('c.villeSlug = :villeSlug')
            ->setParameter('villeSlug',$villeSlug)
            ->getQuery()->getResult();

        return $rc;
    }

    //dep
    Public function dep($region)
    {
        $rawSql = "SELECT r.id, d.code, d.name
                    FROM departments d
                    INNER JOIN regions r ON d.regions_id = r.id
                    WHERE r.id = '".$region."'";

        $stmt = $this->getEntityManager()->getConnection()->prepare($rawSql);
        $stmt->execute([]);

        return $stmt->fetchAll();
    }

    public function departements(){
        $regions = $this->regions();

        $regionsArray = [];

        foreach ($regions as $r) {
            $departements = $this->dep($r['id']);
            $i = 0;
            foreach ($departements as $dep) {
                $regionsArray[$r['name']][$i] = array(
                    'region' => $dep['id'],
                    'code' => $dep['code'],
                    'name' => $dep['name']
                );
                $i++;
            }
        }

        return $regionsArray;
    }

    //region
    Private function regions()
    {
        $rawSql = "SELECT * FROM regions ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($rawSql);
        $stmt->execute([]);

        return $stmt->fetchAll();
    }

}
