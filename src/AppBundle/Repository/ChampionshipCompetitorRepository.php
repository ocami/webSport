<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Championship;
use AppBundle\Entity\Competitor;

/**
 * ChampionshipCompetitorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChampionshipCompetitorRepository extends EntityRepository
{
    /**
     * array strings [ranck,points] | null
     *
     * @param  Competitor
     * @return array|null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function onceByCompetitorToString($competitor){

        $c = $this->createQueryBuilder('c')
            ->select('c.ranck, c.points')
            ->where('c.competitor = :id')
            ->setParameter('id',$competitor)
            ->getQuery()->getOneOrNullResult();

        return $c;
    }

    /**
     * collection of ChampionshipCompetitor order by points
     *
     * @param  Championship
     * @return array
     */
    public function allByChampionship($championship)
    {
        $cc = $this->createQueryBuilder('cc')
            ->where('cc.championship = :championship')
            ->setParameter('championship',$championship->getId())
            ->orderBy('cc.points','DESC')
            ->getQuery()->getResult();

        return $cc;
    }

    /**
     * array strings [ranck,points,competitor[id,code,firstName,lastName] order by points
     *
     * @param  Championship
     * @return array
     */
    public function allByChampionshipToString($championship)
    {
        $cc = $this->createQueryBuilder('cc')
            ->innerJoin('cc.competitor','c')
            ->select('c.code, cc.ranck, cc.points, c.firstName, c.lastName, c.id')
            ->where('cc.championship = :championship')
            ->setParameter('championship',$championship->getId())
            ->orderBy('cc.points','DESC')
            ->getQuery()->getResult();

        return $cc;
    }
}
