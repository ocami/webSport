<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Competition;
use AppBundle\Entity\Race;


/**
 * RaceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RaceRepository extends \Doctrine\ORM\EntityRepository
{

    public function lastId($class)
    {
        return $this->createQueryBuilder('a')
            ->select('MAX(e.id)')
            ->from('AppBundle:' . $class, 'e')
            ->getQuery()
            ->getSingleScalarResult();
    }

    /**
     * @param Race $race
     * @return Race|array
     * contains array race and array categories
     *
     */
    public function toString(Race $race)
    {
        $race = $this->createQueryBuilder('r')
            ->innerJoin('r.competition', 'c')
            ->innerJoin('c.organizer', 'o')
            ->innerJoin('c.location', 'l')
            ->select('r.id, r.name, r.distance, r.inChampionship, r.dateTime, 
                            c.id as competitionId, c.name as competitionName, 
                            o.id as organizerId, o.name as organizerName,
                            l.street, l.postCode, l.city, l.x, l.y
                            ')
            ->where('r.id = :id')
            ->setParameter('id', $race)
            ->getQuery()->getResult();

        $categories = $this->createQueryBuilder('r')
            ->leftJoin('r.categories', 'c')
            ->select('c.id, c.name')
            ->where('r.id = :id')
            ->setParameter('id', $race)
            ->getQuery()->getResult();

        $race['race'] = $race[0];
        unset($race[0]);

        $race['categories'] = $categories;

        return $race;
    }
}
