{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} index
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>
    <link rel="stylesheet" href="{{ asset('tools/tools.css') }}"/>

    <style>
        #indexMap {
            height: 400px;
        }

        .leaflet-popup-img{
            height: 3em;
        }

    </style>
{% endblock %}

{% block body %}

    {% if is_granted('ROLE_AUTEUR') %}
        {{ competitor.category.name }} <br><br>
    {% endif %}

    <div class="col-xs-offset-1 col-xs-10" id="indexMap"></div>


{% endblock %}

{% block javascripts %}
    {{ parent() }}


    <script src="{{ asset('tools/tools.js') }}"></script>
    <script>loaderStart();</script>

    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
            integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin=""></script>
    <script>

        // map leaflet**************************************************************************************************>
        var osmLayer = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
            maxZoom: 18
        });
        var watercolorLayer = L.tileLayer('http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg', {
            attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
            maxZoom: 18
        });

        // icon**************************************************************************************************>
        var pastIcon = L.icon({
            iconUrl: 'http://icons.iconarchive.com/icons/icons-land/vista-map-markers/256/Map-Marker-Marker-Outside-Pink-icon.png',
            iconSize: [30, 30],
            iconAnchor: [11, 31],
            popupAnchor: [5, -25],

        });
        var futureIcon = L.icon({
            iconUrl: 'http://www.iconarchive.com/download/i57834/icons-land/vista-map-markers/Map-Marker-Marker-Outside-Chartreuse.ico',
            iconSize: [30, 30],
            iconAnchor: [11, 31],
            popupAnchor: [5, -25],

        });

        //circle
        var circle = L.circle({
            color: 'red',
            fillColor: '#f03',
            fillOpacity: 0.5,
            radius: 500
        });


        competitor = {{ competitor.id }};

        // data********************************************************************************************************>
        $.ajax({
            url: "{{ path('competition_get_geojson') }}",
            data: { competitor : competitor },
            dataType: "json",
            success: function (data) {
                mapConstructor(data);
            }
        });


        function mapConstructor(data) {

            //Build layers **************************************************************************************************>
            var FuturCompetitionLayer = layerBuild(data.futureCompetitions, pastIcon);
            var PastCompetitionLayer = layerBuild(data.pastCompetitions, futureIcon);
            var competitorLayer = layerBuildCircle(data.competitorCanRegister, circle);

            //Build map **************************************************************************************************>
            var map = L.map('indexMap', {
                center: [46.52863469527167, 2.43896484375],
                zoom: 5,
                layers: [osmLayer, PastCompetitionLayer, FuturCompetitionLayer, competitorLayer]
            });

            //Layers Control **************************************************************************************************>
            var baseMaps = {
                "osmLayer": osmLayer,
                "watercolorLayer": watercolorLayer
            };
            var overlayMaps = {
                "A venir": PastCompetitionLayer,
                "Pass√©es": FuturCompetitionLayer
            };

            L.control.layers(baseMaps, overlayMaps).addTo(map);

            loaderStop();
        }

        function layerBuild(data, icon) {
            return L.geoJSON(data, {
                pointToLayer: function (geoJsonPoint, latlng) {
                    return L.marker(latlng, {icon: icon});
                }
            }).bindPopup(function (layer) {
                return layer.feature.properties.description;
            });
        }



        function layerBuildCircle(data, circle) {
            return L.geoJSON(data, {
                pointToLayer: function (geoJsonPoint, latlng) {
                    return L.circle(latlng,{
                        color: 'red',
                        fillColor: '#f03',
                        fillOpacity: 0.5,
                        radius: 500
                    });
                }
            });
        }

    </script>

{% endblock %}

