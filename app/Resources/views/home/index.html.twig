{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} index
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/pretty-checkbox@3.0/dist/pretty-checkbox.min.css"/>
    <link rel="stylesheet" href="{{ asset('css/multi-switch.min.css') }}"/>


    <style>


        #index-map {
            height: 90%;
        }

        #small-map-container {
            height: 13em;

        }

        #small-map {
            height: 12em;
        }

        #index-map-container {
            height: 75vh;
            background-color: #ffffff;
            position: absolute;
        }

        .leaflet-popup-img {
            height: 3em;
        }

        #search-bar {
            margin-top: 16em;
        }

        #search-bar .panel-heading {
            height: 1.5em;
            padding: 0em;
        }

        .panel-title .glyphicon {
            margin: 0.2em 1em 0em 1em;
        }

        .no-padding > [class*='col-'] {
            max-height: 1em;
        }

        .switchContainer {
            padding-top: 0.2em;
        }

        #search-bar .panel-heading {
            height: 1.5em;
            padding: 0em;
        }

        .dep-container {
            padding: 1em 0em 0em 0.5em;
        }

    </style>
{% endblock %}

{% block body %}

    <div class="col-md-3">

        <div id="small-map-container" class="col-xs-12">
            <div class="col-xs-12" id="small-map"></div>
            <button type="button" id="button-map" value="not-initialized" class="btn btn-info btn-sm col-xs-12">
                Agrandir
            </button>
        </div>

        <button type="button" id="button-search" class="btn btn-success btn-sm col-xs-12">Rechercher courses</button>


        <div id="search-bar">
            <div class="panel-group" id="accordion">

                <!-- SEARCH CATEGORIES -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse1"><span
                                        class="glyphicon glyphicon-folder-close">
                            </span>Cat√©gories</a>
                        </h4>
                    </div>
                    <div id="collapse1" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="pretty p-switch p-fill pull-right">
                                <input id="category-all" type="checkbox"/>
                                <div class="state">
                                    <label></label>
                                </div>
                            </div>
                            {% for key,gender in categories %}
                                <span class="category-gender">{{ key }}</span>
                                <div id="category-once">
                                    {% for c in gender %}
                                        <div class="pretty p-icon p-curve p-rotate">
                                            <input type="checkbox" value="{{ c.id }}">
                                            <div class="state p-success-o">
                                                <i class="icon glyphicon glyphicon-ok"></i>
                                                <label>{{ c.name }}</label>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
                <!-- END SEARCH CATEGORIES -->
                <!-- SEARCH REGIONS -->
                <div id="region-container" class="panel panel-default">
                    <div class="panel-heading">
                        <div class="panel-title">
                            <a data-toggle="collapse" href="#menuPanelRegion">
                                <span>Localisation</span>
                            </a>
                        </div>
                    </div>
                    <ul class="list-group collapse" id="menuPanelRegion">
                        {% set i = 0 %}
                        {% for key,reg in regions %}
                        {% set i = i + 1 %}
                        <li class="list-group-item">
                            <div class="row no-padding">
                                <div class="col-xs-9">
                                    <a data-toggle="collapse" href="#region-{{ i }}">
                                        <span>{{ key }}</span>
                                    </a>
                                </div>
                                <div id="cb-region-{{ i }}" class='switchContainer col-xs-2'>
                                    <input id="cb-region-{{ i }}" region="{{ i }}" type='checkbox' class='multi-switch'
                                           unchecked-value='0' checked-value='1' value='0'/><br>
                                </div>
                            </div>

                            <ul id="region-{{ i }}" class="collapse dep-container">
                                {% for dep in reg %}
                                    <div class="pretty p-icon p-curve p-rotate">
                                        <input class="cb-dep" type="checkbox" region="{{ i }}" value="{{ dep.code }}">
                                        <div class="state p-success-o">
                                            <i class="icon glyphicon glyphicon-ok"></i>
                                            <label>{{ dep.code }} - {{ dep.name }}</label>
                                        </div>
                                    </div><br>
                                {% endfor %}
                            </ul>
                            {% endfor %}
                        </li>
                    </ul>

                </div>
                <!-- END SEARCH REGIONS -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">Collapsible Group 3</a>
                        </h4>
                    </div>
                    <div id="collapse3" class="panel-collapse collapse">
                        <div class="panel-body">Lorem ipsum dolor sit amet, consectetur adipisicing elit,
                            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
                            quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
    <div class="col-md-6"></div>
    <div class="col-md-3"></div>

    <div id="index-map-container" class="col-xs-10">
        <div class="col-xs-12" id="index-map"></div>
        <br>
        <button type="button" id="button-map-close" class="btn btn-info btn-sm pull-right">Fermer</button>
    </div>




    <div class="pretty p-icon p-curve p-rotate">
        <input type="checkbox" value="truc">
        <div class="state p-success-o">
            <i class="icon glyphicon glyphicon-ok"></i>
            <label>truc</label>
        </div>
    </div>

{% endblock %}


{% block javascripts %}
    {{ parent() }}

    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
            integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin=""></script>

    <script>

        var dataSearch = {
            categories: null,
            dep: null,
            dist: null,
            date: null,
            inChampionship: null,
            enrol: null,
            competitorRegister: null
        };

        //init
        indexMaps();
        searchBarCategories();
        searchBarLocalisation();
        searchBarRequest();


        function searchBarCategories() {
            var $cbCategoryAll = $('#category-all');
            var $cbCategories = $("#category-once input");

            //envents
            $cbCategoryAll.click(function () {
                if (this.checked)
                    $cbCategories.prop('checked', true);
                else
                    $cbCategories.prop('checked', false);

                categoriesUpdate();
            });

            $cbCategories.click(function () {
                categoriesUpdate()
            });

            //functions
            function categoriesUpdate() {
                var i = 0;
                var categories = [];
                $cbCategories.each(function () {
                    i++;
                    if (this.checked)
                        categories.push($(this).val());
                });

                if (categories.length < i)
                    $cbCategoryAll.prop('checked', false);

                if (categories.length > 0)
                    dataSearch.categories = categories;
                else
                    dataSearch.categories = null;
            }
        }

        function searchBarLocalisation() {
            var $cbDep= $("#region-container").find('.cb-dep');


            $(document).ready(function () {
                $('.multi-switch').multiSwitch();

            });


            //events
            function regionCheck(status, region) {
                var cbDep = $('#region-' + region + ' input');

                if (status)
                    cbDep.prop('checked', true);
                else
                    cbDep.prop('checked', false);

                depUpdate(region);
            }

            $cbDep.click(function () {
                depUpdate($(this).attr('region'));
            });

            //functions
            function depUpdate(reg) {
                var cptDepReg = 0;
                var cptDepRegChecked = 0;
                var cptDepAll = 0;
                var cptDepAllChecked = 0;
                var departements = [];


                $cbDep.each(function () {
                    var dep = $(this).val();
                    var depReg = $(this).attr('region');
                    cptDepAll++;

                    if (this.checked) {
                        departements.push(dep);
                        cptDepAllChecked++;

                        if (depReg === reg)
                            cptDepRegChecked++;
                    }
                    if (depReg === reg)
                        cptDepReg++;
                });



                /* console.log('cptDepReg :'+cptDepReg);
                 console.log('cptDepRegChecked :'+cptDepRegChecked);
                 console.log('cptDepAll :'+cptDepAll);
                 console.log('cptDepAllChecked :'+cptDepAllChecked);*/

                if (cptDepRegChecked < cptDepReg)
                    regionCheckBoxUpdate(reg, 'some');

                if (cptDepRegChecked === cptDepReg)
                    regionCheckBoxUpdate(reg, 'all');

                if (cptDepRegChecked === 0)
                    regionCheckBoxUpdate(reg, 'none');


                if (cptDepRegChecked > 0)
                    dataSearch.dep = departements;
                else
                    dataSearch.dep = null;

                //console.log(dataSearch);
            }
            function regionCheckBoxUpdate(region, status) {
                var unchecked;
                var checked;

                switch (status) {
                    case 'all':
                        unchecked = 0;
                        checked = 0;
                        break;
                    case 'none':
                        unchecked = 0;
                        checked = 1;
                        break;
                    case 'some':
                        unchecked = 1;
                        checked = 1;
                }

                var checkbox = $("<input region=" + region + "  unchecked-value=" + unchecked + " checked-value=" + checked + " type='checkbox' class='multi-switch' value='0'/><br>")
                $('#cb-region-'+region).add().html(checkbox).find('.multi-switch').multiSwitch()
            }

            ///////////////////////////////////////////////////////////////////////////////////////////
            (function ($) {
                $.fn.multiSwitch = function (options) {

                    var settings = $.extend({
                        textChecked: 'Tout ajouter',
                        textNotChecked: 'Tout supprimer',
                        width: 40,
                        functionOnChange: function ($element) {
                        }
                    }, options);

                    // Create de base element
                    var element = $('<div />').addClass('multi-switch');
                    // Set width in the base element
                    element.css('width', settings.width);
                    // Create de content element
                    var content = $('<div />').addClass('switch-content');
                    // Insert a circle element
                    content.append($('<div />').addClass('switch-circle'));
                    // Append to base element
                    element.append(content);

                    // Store de main object
                    var cheslides = this;

                    cheslides.each(function () {

                        var uelement = element.clone();

                        var eventClick = true;

                        if ($(this).attr('checked-value') && !$(this).is(":disabled")) {

                            var classe = 'initial';
                            if ($(this).val() == $(this).attr('checked-value')) {
                                classe = 'active';
                            } else if ($(this).val() == $(this).attr('unchecked-value')) {
                                classe = 'disable';
                            }

                            if (classe == 'initial') {
                                var infoDeferido = $('<span class="info-slide disable" title="' + settings.textNotChecked + '"/>');
                                var infoIndeferido = $('<span class="info-slide active" title="' + settings.textChecked + '"/>');
                                uelement.find('.switch-content').append(infoDeferido);
                                uelement.find('.switch-content').append(infoIndeferido);

                                infoDeferido.click(function () {
                                    var checkbox = $(uelement).find('input');
                                    checkbox.val($(checkbox).attr('checked-value'));

                                    $(uelement).find('span').html(settings.textChecked);
                                    $(uelement).find('.switch-content').addClass('active');
                                    $(uelement).find('.switch-content').removeClass('disable');

                                    eventClick = true;

                                    $(uelement).find('.info-slide').remove();
                                });

                                infoDeferido.hover(function () {
                                    $(uelement).find('.switch-content').addClass('disable');
                                    $(uelement).find('.switch-content').removeClass('initial');
                                }, function () {
                                    $(uelement).find('.switch-content').addClass('initial');
                                    $(uelement).find('.switch-content').removeClass('disable');
                                });

                                infoIndeferido.click(function () {
                                    var checkbox = $(uelement).find('input');
                                    checkbox.val($(checkbox).attr('unchecked-value'));

                                    $(uelement).find('span').html(settings.textChecked);
                                    $(uelement).find('.switch-content').addClass('disable');
                                    $(uelement).find('.switch-content').removeClass('active');

                                    eventClick = true;

                                    $(uelement).find('.info-slide').remove();
                                });

                                infoIndeferido.hover(function () {
                                    $(uelement).find('.switch-content').addClass('active');
                                    $(uelement).find('.switch-content').removeClass('initial');
                                }, function () {
                                    $(uelement).find('.switch-content').addClass('initial');
                                    $(uelement).find('.switch-content').removeClass('active');
                                });

                                eventClick = false;
                            }

                            uelement.find('.switch-content')
                                .addClass(classe)
                                .addClass($(this).is(":disabled") ? 'disabled' : '');
                            uelement.append($(this).clone());

                        } else {
                            var isChecked = $(this).is(":checked");

                            uelement.find('span').html(isChecked ? settings.textChecked : settings.textNotChecked);
                            uelement.find('.switch-content')
                                .addClass(isChecked ? 'active' : 'disable')
                                .addClass($(this).is(":disabled") ? 'disabled' : '');
                            uelement.append($(this).clone());
                        }

                        uelement.click(function () {

                            if (!eventClick)
                                return;

                            var checkbox = $(this).find('input');

                            if (checkbox.is(":disabled"))
                                return;

                            if ($(checkbox).attr('checked-value')) {
                                var checked = $(this).find('.switch-content').hasClass('active');
                                var status = !checked;
                                if (checked) {
                                    checkbox.val($(checkbox).attr('unchecked-value'));
                                } else {
                                    checkbox.val($(checkbox).attr('checked-value'));
                                }
                            } else {
                                var status = !checkbox.is(":checked");

                                checkbox.prop('checked', status);
                            }

                            settings.functionOnChange(checkbox);
                            $(this).find('.switch-content').removeClass('initial');
                            if (status) {
                                $(this).find('span').html(settings.textChecked);
                                $(this).find('.switch-content').addClass('active');
                                $(this).find('.switch-content').removeClass('disable');
                            } else {
                                $(this).find('span').html(settings.textNotChecked);
                                $(this).find('.switch-content').addClass('disable');
                                $(this).find('.switch-content').removeClass('active');
                            }
                            //!!!!!!MON AJOUT!!!!!!!!!!!!!!!!!!!!!!!!!!!
                            var region = $(checkbox).attr('region');
                            regionCheck(status, region);
                            //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                        });
                        uelement.change(function () {

                            var checkbox = $(this).find('input');
                            if (checkbox.is(":disabled"))
                                return;

                            if ($(checkbox).attr('checked-value')) {
                                var checked = $(this).find('.switch-content').hasClass('active');
                                var status = !checked;

                                if (checked) {
                                    checkbox.val($(checkbox).attr('unchecked-value'));
                                } else {
                                    checkbox.val($(checkbox).attr('checked-value'));
                                }
                            } else {
                                var status = !checkbox.is(":checked");
                                checkbox.prop('checked', status);
                            }

                            settings.functionOnChange(checkbox);
                            $(this).find('.switch-content').removeClass('initial');
                            if (status) {
                                $(this).find('span').html(settings.textChecked);
                                $(this).find('.switch-content').addClass('active');
                                $(this).find('.switch-content').removeClass('disable');
                            } else {
                                $(this).find('span').html(settings.textNotChecked);
                                $(this).find('.switch-content').addClass('disable');
                                $(this).find('.switch-content').removeClass('active');
                            }
                        });

                        $(this).after(uelement);
                        $(this).remove();
                    });
                };
            }(jQuery));
        }

        function searchBarRequest() {

            //envents
            $('#button-search').click(function () {
                searchRace();
            });

            function searchRace() {

                console.log(dataSearch);


                /*var path = Routing.generate('races_search', {
                    dataSearch: JSON.stringify(dataSearch)
                });

                window.location = path;*/
            }
        }

        function indexMaps() {
            var $smallMap = $('#small-map');
            var $smallMapContainer = $('#small-map-container');
            var $indexMap = $('#index-map');
            var $indexMapConatiner = $('#index-map-container');
            var $indexButton = $('#button-map');
            var dataMap;

            $(function () {

                //loaderDivStart($smallMap);
                $indexMapConatiner.hide();

                //data map
                var path = Routing.generate('competition_get_geojson');
                $.ajax({
                    url: path,
                    success: function (data) {
                        dataMap = data;
                        smallMapBuild(data);
                    },
                    error: function () {
                        ajaxError();
                    }
                });
            });

            // Event**************************************************************************************************>

            $indexButton.click(function () {
                $smallMapContainer.hide();
                $indexMapConatiner.show();
                if ($(this).val() === 'not-initialized') {
                    indexMapBuild(dataMap);
                    $(this).val('is-initialized');
                }
            });

            $('#button-map-close').click(function () {
                $indexMapConatiner.hide();
                $smallMapContainer.show();
            });

            // Maps build**************************************************************************************************>
            var pastIcon = L.icon({
                iconUrl: 'http://icons.iconarchive.com/icons/icons-land/vista-map-markers/256/Map-Marker-Marker-Outside-Pink-icon.png',
                iconSize: [30, 30],
                iconAnchor: [11, 31],
                popupAnchor: [5, -25],

            });
            var futureIcon = L.icon({
                iconUrl: 'http://www.iconarchive.com/download/i57834/icons-land/vista-map-markers/Map-Marker-Marker-Outside-Chartreuse.ico',
                iconSize: [30, 30],
                iconAnchor: [11, 31],
                popupAnchor: [5, -25],

            });

            function smallMapBuild(data) {
                var FuturCompetitionLayer = layerBuild(data.futureCompetitions, pastIcon);

                var osmLayer = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
                    maxZoom: 18
                });
                var smallMap = L.map('small-map', {
                    center: [46.52863469527167, 2.43896484375],
                    zoom: 4,
                    layers: [osmLayer, FuturCompetitionLayer]
                });

                //loaderDivStop($smallMap);
            }

            function indexMapBuild(data) {
                var watercolorLayer = L.tileLayer('http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg', {
                    attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
                    maxZoom: 18
                });
                var FuturCompetitionLayer2 = layerBuild(data.futureCompetitions, pastIcon);
                var PastCompetitionLayer2 = layerBuild(data.pastCompetitions, futureIcon);

                var osmLayer2 = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
                    maxZoom: 18
                });
                var indexMap = L.map('index-map', {
                    center: [46.52863469527167, 2.43896484375],
                    zoom: 5,
                    layers: [osmLayer2, PastCompetitionLayer2, FuturCompetitionLayer2]
                });

                //Layers Control **************************************************************************************************>
                var baseMaps = {
                    "osmLayer": osmLayer2,
                    "watercolorLayer": watercolorLayer
                };
                var overlayMaps = {
                    "A venir": FuturCompetitionLayer2,
                    "Pass√©es": PastCompetitionLayer2
                };

                L.control.layers(baseMaps, overlayMaps).addTo(indexMap);
            }

            function layerBuild(data, icon) {
                return L.geoJSON(data, {
                    pointToLayer: function (geoJsonPoint, latlng) {
                        return L.marker(latlng, {icon: icon});
                    }
                }).bindPopup(function (layer) {
                    return layer.feature.properties.description;
                });
            }
        }
    </script>

{% endblock %}

