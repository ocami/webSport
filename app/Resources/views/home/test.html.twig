{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/jquery-ui.css') }}"/>
    <link rel="stylesheet" href="{{ asset('locationForm/locationForm.css') }}"/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>
{% endblock %}

    {% block body %}

        <div id="location_alert" class="alert alert-warning" role="alert" style="display: none"></div>

        <div id="location_form" class="col-xs-7">
                    <div class="form-group">
                <label id="location_label"></label>
                <input id="location_input" class="form-control" placeholder="Ex : 56 morbihan">
            </div>

            <button class="col-xs-2 next_step_btn btn btn-primary btn-sm"
                    onclick="nextStep(this.value)">Suivant
            </button>
        </div>

        <div id="location_show" class="col-xs-5"></div>

    {% endblock %}

   {% block javascripts %}
       {{ parent() }}

       <! address typeahead********************************************************************************************>
       <script src="{{ asset('js/jqueryui.min.js') }}"></script>
       <script>
           var depCode;
           var cityCode;
           var locationData;

           var locationAlert = $("#location_alert");
           var locationLabel = $("#location_label");
           var locationInput = $("#location_input");
           var locationBtn = $(".next_step_btn");

           $(document).ready(function () {
               nextStep('dep');
           });

           //Step**************************************************************
           function nextStep(step) {
               switch (step) {

                   case 'dep' :
                       depAutocomplete();
                       locationLabel.text('Département');
                       locationInput.attr("placeholder", "Ex : 06 Alpes-Maritimes");
                       locationBtn.val('depValidate');
                       break;

                   case 'depValidate' :
                       depValidate();
                       break;

                   case 'city' :
                       cityAutocomplete(depCode);
                       locationLabel.text('Ville');
                       locationInput.attr("placeholder", "Ex : nice");
                       locationBtn.val('cityValidate');
                       break;

                   case 'cityValidate' :
                       cityValidate();
                       break;

                   case 'address' :
                       addressAutocomplete(cityCode);
                       locationLabel.text('Adresse');
                       locationInput.attr("placeholder", "Ex : 5 Promenade des Anglais");
                       locationBtn.val('addressValidate');
                       break;

                   case 'addressValidate' :
                       addressValidate();
                       break;

                   case 'confirm' :
                       locationBtn.hide();
                       $('#location_form .form-group').hide();
                       locationConfirm();
                       break;
               }
           }

           function returnStep(step) {
               locationInput.val('');
               $('#location_form .form-group').show();
               $('.location_map').remove();

               switch (step) {
                   case 'dep' :
                       $('.show_dep').remove();
                       depCode = '';

                   case  'city' :
                       $('.show_city').remove();
                       cityCode = '';

                   case  'address' :
                       $('.show_address').remove();
                       locationData = '';
               }
               nextStep(step);
           }

           //Dep**************************************************************
           function depAutocomplete() {
               $.get("{{ asset('json/departements2.json') }}", function (data, status) {
                   locationInput.autocomplete({
                       source: data
                   })
               });
           }

           function depValidate() {

               addShowElement(locationInput.val(), 'dep');
               depCode = locationInput.val().slice(0, 2);
               locationInput.val('');
               locationAlert.hide();

               $.get("{{ asset('json/departements3.json') }}", function (data, status) {
                   if (jQuery.inArray(depCode, data) !== -1) {
                       nextStep('city');
                   } else {
                       nextStep('dep');
                       locationAlert.text('Veuillez sélectionner un département dans la liste');
                       locationAlert.show();
                   }
               });
           }

           //City*************************************************************
           function cityAutocomplete(dep) {
               $.ajax({
                   url: "{{ path('address_getCitiesSlugByDep') }}",
                   data: {dep: dep},
                   dataType: "json",
                   success: function (data) {
                       var cities = [];
                       $.map(data, function (item) {
                           cities.push(item.villeSlug);
                       });

                       locationInput.autocomplete({
                           source: cities
                       })

                   }
               });
           }

           function cityValidate() {
               var citySlug = locationInput.val();
               locationInput.val('');
               locationAlert.hide();

               $.ajax({
                   url: "{{ path('address_getCitiesData') }}",
                   data: {ville_slug: citySlug},
                   dataType: "json",
                   success: function (data) {
                       console.log(data);


                       var cityData = data[0];

                       if (data.length > 0 && citySlug == cityData.villeSlug) {
                           addShowElement(cityData.villeNomReel, 'city');
                           cityCode = cityData.villeCodeCommune;
                           nextStep('address');
                       } else {
                           nextStep('city');
                           locationAlert.text('Veuillez sélectionner une commune dans la liste');
                           locationAlert.show();
                       }
                   }
               });

           }

           //Address**********************************************************
           function addressAutocomplete(cityCode) {
               locationInput.autocomplete({
                   source: function (request, response) {
                       $.ajax({
                           url: "https://api-adresse.data.gouv.fr/search/?citycode=" + cityCode,
                           data: {q: request.term},
                           dataType: "json",
                           success: function (data) {
                               response($.map(data.features, function (item) {
                                   var truc = {label: item.properties.name, value: item.properties.name};
                                   return truc;
                               }));
                               autocompleteAddressList = data.features;
                           }
                       });
                   }
               });
           }

           function addressValidate() {
               $.ajax({
                   url: "https://api-adresse.data.gouv.fr/search/?citycode=" + cityCode,
                   data: {q: locationInput.val()},
                   dataType: "json",
                   success: function (data) {
                       if (data.features.length > 0 && data.features[0].properties.name == locationInput.val()) {
                           var locationFeatures = data.features[0];
                           addShowElement(locationFeatures.properties.name, 'address');
                           setLocationData(locationFeatures);
                           nextStep('confirm');
                       } else {
                           locationAlert.text('Veuillez sélectionner une adresse dans la liste');
                           locationAlert.hide();
                           nextStep('address');
                       }
                   }
               });
           }

           //Confirm**********************************************************
           function locationConfirm() {
               var map = document.createElement("div");
               map.className = "location_map";
               map.setAttribute('id', 'location_map');
               $('.next_step_btn').before(map);

               openLocationMap(locationData.x, locationData.y, 'location_map');
           }

           //Other************************************************************
           function addShowElement(text, step) {
               var div = document.createElement("div");
               div.className = "form_show row show_" + step;
               var txt = document.createElement("p");
               txt.append(text);
               txt.className = "col-xs-7";
               var btn = document.createElement("button");
               btn.className = "col-xs-2 edit_bt btn btn-success btn-xs";
               btn.append('Modifier');

               btn.onclick = function () {
                   returnStep(step);
               };

               div.append(txt);
               div.append(btn);

               $('#location_show').append(div);


           }

           function setLocationData(locationFeatures) {
               var f = locationFeatures;
               locationData = {
                   id: f.properties.id,
                   street: f.properties.name,
                   postCode: f.properties.postcode,
                   city: f.properties.city,
                   x: f.geometry.coordinates[1],
                   y: f.geometry.coordinates[0]
               }
           }

       </script>

       <! map leaflet**************************************************************************************************>
       <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
               integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
               crossorigin=""></script>
       <script>
           function openLocationMap(x, y, mapId) {
               var mymap = L.map(mapId).setView([x, y], 25);
               var marker = L.marker([x, y]).addTo(mymap);
               L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                   attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
                   maxZoom: 18
               }).addTo(mymap);
           }
       </script>
   {% endblock %}
