{% extends 'form_layout.html.twig' %}

{% block title %}
    {{ parent() }} index
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/pretty-checkbox@3.0/dist/pretty-checkbox.min.css"/>
    <link rel="stylesheet" href="{{ asset('css/multi-switch.min.css') }}"/>

    <style>

        .no-padding > [class*='col-'] {
            max-height: 1em;
        }

        .switchContainer {
            padding-top: 0.2em;
        }

        #search-bar .panel-heading {
            height: 1.5em;
            padding: 0em;
        }

        .dep-container {
            padding: 1em 0em 0em 0.5em;
        }

        .cb-heading {
            z-index: 100;
        }

    </style>

{% endblock %}

{% block body %}

    <div id="search-bar" class="col-md-3">
        <div class="panel-group" id="accordion">
            <!-- SEARCH CATEGORIES -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        <a data-toggle="collapse" href="#panelCategory">
                            <span>Categories</span>
                        </a>
                        <div class='switchContainer pull-right'>
                            <div class="multi-switch ">
                                <div id="switch-category" class="switch-content disable" status="active"
                                     initial="0">
                                    <div class="switch-circle"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="panelCategory" class="panel-collapse collapse">
                    <div id="category-container" class="panel-body">
                        {% for key,gender in categories %}
                            <span class="category-gender">{{ key }}</span>
                            <div id="category-once">
                                {% for c in gender %}
                                    <div class="pretty p-icon p-curve p-rotate">
                                        <input type="checkbox" value="{{ c.id }}">
                                        <div class="state p-success-o">
                                            <i class="icon glyphicon glyphicon-ok"></i>
                                            <label>{{ c.name }}</label>
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
            <!-- SEARCH REGIONS -->
            <div id="region-container" class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        <a data-toggle="collapse" href="#menuPanelRegion">
                            <span>Localisation</span>
                        </a>
                        <div class='switchContainer pull-right'>
                            <div class="multi-switch ">
                                <div id="switch-region-all" class="switch-content disable" status="active"
                                     initial="0">
                                    <div class="switch-circle"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <ul class="list-group collapse" id="menuPanelRegion">
                    {% set i = 0 %}
                    {% for key,reg in regions %}
                    {% set i = i + 1 %}
                    <li class="list-group-item">
                        <div class="row no-padding">
                            <div class="col-xs-9">
                                <a data-toggle="collapse" href="#region-{{ i }}">
                                    <span>{{ key }}</span>
                                </a>
                            </div>
                            <div class='switchContainer col-xs-2'>
                                <div class="multi-switch ">
                                    <div id="switch-region-{{ i }}" class="switch-content disable" status="active"
                                         initial="0">
                                        <div class="switch-circle"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <ul id="region-{{ i }}" class="collapse dep-container">
                            {% for dep in reg %}
                                <div class="pretty p-icon p-curve p-rotate">
                                    <input id="cb-departement-{{ i }}" class="cb-dep" type="checkbox"
                                           region="{{ i }}" value="{{ dep.code }}">
                                    <div class="state p-success-o">
                                        <i class="icon glyphicon glyphicon-ok"></i>
                                        <label>{{ dep.code }} - {{ dep.name }}</label>
                                    </div>
                                </div><br>
                            {% endfor %}
                        </ul>
                        {% endfor %}
                    </li>
                </ul>
            </div>
            <!-- SEARCH DISTANCE -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        <a data-toggle="collapse" href="#panelDistance">
                            <span>Distance</span>
                        </a>
                        <div class='switchContainer pull-right'>
                            <div class="multi-switch ">
                                <div id="switch-distance" class="switch-content disable" status="active"
                                     initial="0">
                                    <div class="switch-circle"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="panelDistance" class="panel-collapse collapse">
                    <div id="distance-container" class="panel-body">
                        <form data-toggle="validator" role="form">
                            <div class="form-group has-feedback">
                                <label for="distMin" class="control-label">Min</label>
                                <div class="input-group">
                                    <input type="number" step="any" min="1" max="1000" value="1"
                                           class="form-control" id="distMin">
                                </div>
                                <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                                <div class="help-block with-errors">Entre 1 et 1000</div>
                            </div>

                            <div class="form-group has-feedback">
                                <label for="distMax" class="control-label">Max</label>
                                <div class="input-group">
                                    <input type="number" step="any" min="1" max="1000" value="1000"
                                           class="form-control" id="distMax">
                                </div>
                                <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                                <div class="help-block with-errors">Entre 1 et 1000</div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <!-- SEARCH DATE -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        <a data-toggle="collapse" href="#panelDate">
                            <span>Date</span>
                        </a>
                        <div class='switchContainer pull-right'>
                            <div class="multi-switch ">
                                <div id="switch-date" class="switch-content disable" status="active"
                                     initial="0">
                                    <div class="switch-circle"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="panelDate" class="panel-collapse collapse">
                    <div id="date-container" class="panel-body">
                        <label>A partir du :</label>
                        <input id="date-min" class="datepicker">
                        <label>Jusqu'au :</label>
                        <input id="date-max" class="datepicker">
                    </div>
                </div>
            </div>
            <!-- SEARCH CHAMPIONSHIP -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        <a data-toggle="collapse" href="#panelChampionship">
                            <span>Championship</span>
                        </a>
                        <div class='switchContainer pull-right'>
                            <div class="multi-switch ">
                                <div id="switch-championship" class="switch-content disable" status="active"
                                     initial="0">
                                    <div class="switch-circle"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="panelChampionship" class="panel-collapse collapse">
                    <div id="championship-container" class="panel-body">
                        <div class="pretty p-icon p-round">
                            <input id="radio-championship-1" type="radio" name="icon_solid" value="1"/>
                            <div class="state p-success">
                                <i class="icon glyphicon glyphicon-ok"></i>
                                <label>En championat</label>
                            </div>
                        </div>

                        <div class="pretty p-icon p-round">
                            <input id="radio-championship-0" type="radio" name="icon_solid" value="0"/>
                            <div class="state p-success">
                                <i class="icon glyphicon glyphicon-ok"></i>
                                <label>Hors championat</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="col-md-6"></div>
    <div class="col-md-3"></div>

{% endblock %}



    {% block javascripts %}
        {{ parent() }}

        <script>
            var dataSearch = {
                categories: null,
                dep: null,
                dist: {min: null, max: null},
                date: {min: null, max: null},
                inChampionship: null,
                enrol: null,
                competitorRegister: null
            };

            var updateDataSearch = {
                categories: ["1", '2', "3"],
                dep: ["01", "03", "07", "15", "26", "38", "42", "43", "63", "69", "73", "74", '56', '35'],
                dist: {min: 20, max: 50},
                date: {min: '2018-10-10', max: '2018-12-12'},
                inChampionship: '0',
                enrol: null,
                competitorRegister: null
            };

            //var updateLocationArray = ;

            searchBarLocalisation();

            function searchBarLocalisation() {
                var $allSwitch = $("#search-bar").find('.switch-content');

                var $categoryContainer = $('#category-container');
                var $regionContainer = $('#region-container');
                var $distanceContainer = $('#distance-container');
                var $dateContainer = $('#date-container');
                var $championshipContainer = $('#championship-container');
                //var $competitorContainer = $('#competitor-container');


                var $allCbDepartement = $regionContainer.find('.cb-dep');
                var $allCbCategory = $categoryContainer.find('input');
                var $inputDistance = $distanceContainer.find('input');
                var $inputDate = $dateContainer.find('input');
                var $inputChampionship = $championshipContainer.find('input');
                //var $inputCompetitor = $competitorContainer.find('input');

                var $dateMin = $dateContainer.find('#date-min');
                var $dateMax = $dateContainer.find('#date-max');

                //init
                $dateContainer.find('.datepicker').datepicker({
                    language: 'fr',
                    format: 'dd-mm-yyyy',
                    todayBtn: 'linked',
                    autoclose: true,
                });
                searchUpdate();

                //update
                function searchUpdate() {

                    if (updateDataSearch.categories) {
                        $allCbCategory.each(function () {
                            var categories = $(this).val();
                            if ($.inArray(categories, updateDataSearch.categories) !== -1) {
                                $(this).prop('checked', true);
                                refreshCategory();
                            }
                        });
                    }

                    if (updateDataSearch.dep) {
                        $allCbDepartement.each(function () {
                            var dep = $(this).val();
                            if ($.inArray(dep, updateDataSearch.dep) !== -1) {
                                $(this).prop('checked', true);
                                refreshDepartement($(this).attr('region'));
                            }
                        });
                    }

                    if (updateDataSearch.dist.min || updateDataSearch.dist.max) {
                        if (updateDataSearch.dist.min)
                            $('#distMin').val(updateDataSearch.dist.min);

                        if (updateDataSearch.dist.max)
                            $('#distMax').val(updateDataSearch.dist.max);

                        switchActive($('#switch-distance'));
                        refreshDistance('active');
                    } else
                        refreshDistance('disable');

                    if (updateDataSearch.date.min || updateDataSearch.date.max) {
                        if (updateDataSearch.date.min)
                            $dateMin.datepicker('update', parseDateUsToFr(updateDataSearch.date.min));

                        if (updateDataSearch.date.max)
                            $dateMax.datepicker('update', parseDateUsToFr(updateDataSearch.date.max));

                        switchActive($('#switch-date'));
                        refreshDate('active');
                    } else
                        refreshDate('disable');

                    if (updateDataSearch.inChampionship)
                        refreshChampionship('active');
                }

                //events
                $allSwitch.click(function () {
                    var $switcher = $(this);
                    var status = $switcher.attr('status');
                    var data = $switcher.attr('id').split('-');
                    var initial = $switcher.attr('initial');

                    if (initial !== '0') {
                        status = initial;
                        $switcher.attr('initial', '0');
                    }

                    switch (data[1]) {
                        case 'region' :
                            //data[2] = region.code
                            refreshRegion(data[2], status);
                            break;

                        case 'category' :
                            if (status === "active")
                                $allCbCategory.prop('checked', true);
                            else
                                $allCbCategory.prop('checked', false);
                            refreshCategory();
                            break;

                        case 'distance' :
                            refreshDistance(status);
                            break;

                        case 'date' :
                            refreshDate(status);
                            break;

                        case 'championship' :
                            refreshChampionship(status);
                            break;
                    }

                    switch (status) {
                        case 'disable' :
                            switchDisable($switcher);
                            break;

                        case 'active' :
                            switchActive($switcher);
                            break;

                        case 'initial' :
                            break;
                    }
                });

                $allCbDepartement.click(function () {
                    refreshDepartement($(this).attr('region'));
                });

                $allCbCategory.click(function () {
                    refreshCategory();
                });

                $inputDistance.change(function () {
                    refreshDistance('active');
                });

                $inputDate.on('changeDate', function () {
                    refreshDate('active');
                });

                $inputChampionship.click(function ()  {
                    dataSearch.inChampionship = $(this).val();
                    console.log(dataSearch);
                });

                //functions/////////////////////////////////////////////////////////////////////////////////////////////
                function refreshRegion(region, status) {
                    var $cbDep;
                    if (region !== 'all')
                        $cbDep = $("#region-" + region).find('.cb-dep');
                    else
                        $cbDep = $("#region-container").find('.cb-dep');

                    if (status === "active")
                        $cbDep.prop('checked', true);
                    else
                        $cbDep.prop('checked', false);

                    refreshDepartement(region);
                }

                function refreshDepartement(region) {
                    var cptDepReg = 0;
                    var cptDepRegChecked = 0;
                    var cptDepAll = 0;
                    var cptDepAllChecked = 0;
                    var departements = [];
                    var $switcher = $("#switch-region-" + region);
                    var $switcherAll = $("#switch-region-all");
                    var $allSwitchRegion = $('#region-container').find('.switch-content');

                    //count, if isChecked push in array data
                    $allCbDepartement.each(function () {
                        var dep = $(this).val();
                        var depReg = $(this).attr('region');

                        cptDepAll++;
                        if (depReg === region)
                            cptDepReg++;

                        if (this.checked) {
                            departements.push(dep);
                            cptDepAllChecked++;

                            if (depReg === region)
                                cptDepRegChecked++;
                        }
                    });

                    //switchRegion refresh
                    if (cptDepRegChecked === 0)
                        switchDisable($switcher);
                    else if (cptDepRegChecked === cptDepReg)
                        switchActive($switcher);
                    else
                        switchInitial($switcher);

                    //switcherSelectAll refresh
                    if (cptDepAllChecked === 0) {
                        $allSwitchRegion.each(function () {
                            switchDisable($(this));
                        })
                    } else if (cptDepAllChecked === cptDepAll) {
                        $allSwitchRegion.each(function () {
                            switchActive($(this));
                        })
                    } else
                        switchInitial($switcherAll);

                    //data refresh
                    if (cptDepAllChecked === 0 || cptDepAllChecked === cptDepAll)
                        dataSearch.dep = null;
                    else
                        dataSearch.dep = departements;
                }

                function refreshCategory() {
                    var cptCategory = 0;
                    var cptCategoryChecked = 0;
                    var $switcher = $("#switch-category");
                    var categories = [];

                    //count, if isChecked push in array data
                    $allCbCategory.each(function () {
                        var category = $(this).val();
                        cptCategory++;
                        if (this.checked) {
                            categories.push(category);
                            cptCategoryChecked++;
                        }
                    });

                    //switchCategory refresh
                    if (cptCategoryChecked === 0) {
                        switchDisable($switcher);
                    } else if (cptCategoryChecked === cptCategory)
                        switchActive($switcher);
                    else
                        switchInitial($switcher);

                    //data refresh
                    if (cptCategoryChecked === 0 || cptCategoryChecked === cptCategory)
                        dataSearch.categories = null;
                    else
                        dataSearch.categories = categories;
                }

                function refreshDistance(status) {
                    var $distanceContainer = $('#distance-container');

                    if (status === "active") {
                        var inputMin = $('#distMin');
                        var inputMax = $('#distMax');
                        var min = inputMin.val();
                        var max = inputMax.val();

                        $distanceContainer.css({'opacity': 1, 'pointer-events': 'auto'});
                        dataSearch.dist.min = min;
                        dataSearch.dist.max = max;
                        inputMin.attr('max', max);
                        inputMax.attr('min', min);
                    }
                    else {
                        $distanceContainer.css({'opacity': 0.5, 'pointer-events': 'none'});
                        dataSearch.dist.min = null;
                        dataSearch.dist.max = null;
                    }
                }

                function refreshDate(status) {
                    if (status === "active") {
                        $dateContainer.css({'opacity': 1, 'pointer-events': 'auto'});

                        if ($dateMin.val()) {
                            dataSearch.date.min = parseDateFrToUs($dateMin.datepicker('getFormattedDate'));
                            $dateMin.datepicker('setEndDate', $dateMax.datepicker('getDate'));
                        } else
                            dataSearch.date.min = null;
                        if ($dateMax.val()) {
                            dataSearch.date.max = parseDateFrToUs($dateMax.datepicker('getFormattedDate'));
                            $dateMax.datepicker('setStartDate', $dateMin.datepicker('getDate'));
                        } else
                            dataSearch.date.max = null;
                    }
                    else {
                        $dateContainer.css({'opacity': 0.5, 'pointer-events': 'none'});
                        dataSearch.date.min = null;
                        dataSearch.date.max = null;
                    }

                }

                function refreshChampionship(status) {

                    if (status === "active") {
                        $championshipContainer.css({'opacity': 1, 'pointer-events': 'auto'});
                        switchActive($('#switch-championship'));

                        if (updateDataSearch.inChampionship === '1')
                            $('#radio-championship-1').prop('checked', true);

                        if (updateDataSearch.inChampionship === '0')
                            $('#radio-championship-0').prop('checked', true);

                        if ($('#radio-championship-1').is(':checked'))
                            dataSearch.inChampionship = '1';

                        if ($('#radio-championship-0').is(':checked'))
                            dataSearch.inChampionship = '0';
                    } else {
                        $championshipContainer.css({'opacity': 0.5, 'pointer-events': 'none'});
                        dataSearch.inChampionship = null;
                    }
                    console.log(dataSearch);

                }

                //switcher
                function switchDisable($switcher) {
                    $switcher.find('.info-slide').remove();
                    $switcher.attr({
                        'class': 'switch-content disable',
                        'status': 'active',
                        'initial': '0'
                    });
                }

                function switchActive($switcher) {
                    $switcher.find('.info-slide').remove();
                    $switcher.attr({
                        'class': 'switch-content active',
                        'status': 'disable',
                        'initial': '0'
                    });
                }

                function switchInitial($switcher) {

                    $switcher.attr({
                        'status': 'initial',
                        'class': 'switch-content initial',
                        'initial': true
                    });

                    var notSelect = $('<span class="info-slide disable" title="tout supprimer"/>');
                    var allSelect = $('<span class="info-slide active" title="tout sélectionner"/>');
                    $switcher.append(notSelect);
                    $switcher.append(allSelect);

                    notSelect.hover(function () {
                        $switcher.addClass('disable');
                        $switcher.removeClass('initial');
                    }, function () {
                        $switcher.addClass('initial');
                        $switcher.removeClass('disable');
                    });

                    allSelect.hover(function () {
                        $switcher.addClass('active');
                        $switcher.removeClass('initial');
                    }, function () {
                        $switcher.addClass('initial');
                        $switcher.removeClass('active');
                    });

                    allSelect.click(function () {
                        $switcher.find('.info-slide').remove();
                        $switcher.attr('initial', 'active');
                    });

                    notSelect.click(function () {
                        $switcher.find('.info-slide').remove();
                        $switcher.attr('initial', 'disable');
                    });
                }

                //date/////////////////////////////////////////////////////////////////////////////////////////////


            }


        </script>


    {% endblock %}

