{#
TO DO
    LOCATION FORM
    *suivant touche entrer
    *faire api a part pour renvoyer ville par département ou json => permet de mettre fichier Json a part
        actuellement impossible a cause asset
    *différencier label value

    GENERAL
    *Bouton validé actif que si tout les champs sont ok
    *pop-up votre compétition à bien été enregistrée
#}
{% extends 'form_layout.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        fieldset.scheduler-border {
            border: 1px groove #ddd !important;
            padding: 0 1.4em 1.4em 1.4em !important;
            margin: 0 0 1.5em 0 !important;
            -webkit-box-shadow: 0px 0px 0px 0px #ababab;
            box-shadow: 0px 0px 0px 0px #ababab;
        }

        legend.scheduler-border {
            font-size: 1.2em !important;
            font-weight: bold !important;
            text-align: left !important;
            width: auto;
            padding: 0 10px;
            border-bottom: none;
        }

        .race-form-border {
            border-radius: 30px 30px 30px 30px;
            -moz-border-radius: 30px 30px 30px 30px;
            -webkit-border-radius: 30px 30px 30px 30px;
            border: 8px solid #c8d424;

            padding: 1em 1em 1em 1em;
        }
    </style>

{% endblock %}

{% block title %}
    {{ parent() }}  {% if update is defined %} Modifier course {% else %}  Ajouter course {% endif %}
{% endblock %}

{% block forms_content %}
    
    <div class="race-form">
        {{ form_start(form, {'attr': {'data-toggle': 'validator', 'role':'form'}}) }}

        <!--Name-->
        <div class="form-group has-feedback race-form-border">
            <label for="name" class="control-label">Nom</label>
            {{ form_widget(form.name, {'attr': {'class':"form-control"}}) }}
            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>

            <div class="help-block with-errors">Entre 5 et 50 caractères alaphanumériques</div>
        </div>

        <!--Distance-->
        <div class="form-group has-feedback race-form-border">
            {{ form_widget(form.distance, {'attr': {'class':"form-control distance-input", 'style':"display: none"}}) }}

            {% include 'race/widget/distance.html.twig' %}
        </div>

        <!--Categories -->
        <div class="form-group has-feedback race-form-border">
            <label for="categories" class="control-label">Categories</label><br><br>
            <div style="display: none">
                {{ form_widget(form.categoriesString, {'attr':  {
                    'type':"text",
                    'min':"1",
                    'class':"form-control categories-input",
                    'required':'true'}}) }}

                {{ form_widget(form.requestInChampionship, {'attr':  {
                    'class':"championship-check",
                }}) }}
            </div>
            {% include 'race/widget/categories.html.twig' %}
        </div>

        <!--Date Time-->
        <div class="form-group has-feedback race-form-border">
            <label for="date-time" class="control-label">Date</label>
            {{ form_widget(form.dateTime, {'attr':  {
                'type':"text",
                'min':"1",
                'style':"display: none",
                'class':"form-control date-time-input result",
                'data-error':"Format de date non valide",
                'required':'true'}}) }}
            <div class="row">
                <div id="myDateTime" class="col-sm-offset-2 col-sm-6"></div>
            </div>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>

        {{ form_end(form) }}
    </div>

    
{% endblock %}

{% block javascripts %}
     {{ parent() }}
    
     <! distance*******************************************************************************************************>
     <script>
         $('#distance-widget').change(function () {
             $('.distance-input').val($('#distance-widget').val())
         })
     </script>

     <! checkbox categories********************************************************************************************>
     <script>

         var cbAllCat = $('.cbCategories-all');
         var cbOnce = $('.category-once');
         var cbChamp = $('.cb-championship');
         var catInput = $('.categories-input');
         var champCheck = $('.championship-check');
         var categories;

         // Initalize
         cbAllCat.checkboxradio();
         cbOnce.checkboxradio();
         cbChamp.checkboxradio();

         cbChamp.click(function () {
             if (this.checked)
                 champCheck.prop('checked', true).checkboxradio('refresh')
             else
                 champCheck.prop('checked', false).checkboxradio('refresh')
         });

         cbAllCat.click(function () {
             if (this.checked)
                 cbOnce.prop('checked', true).checkboxradio('refresh')
             else
                 cbOnce.prop('checked', false).checkboxradio('refresh')

             categoriesUpdate();
         });

         cbOnce.click(function () {
             categoriesUpdate()
         });

         {% for category in race.categories %}
         $('.category-once').each(function () {

             if ($(this).val() == {{ category.id }} ) {
                 $(this).prop('checked', true).checkboxradio('refresh');
             }
             categoriesUpdate();

         });

         {% endfor %}


         function categoriesUpdate() {
             var i = 0;
             categories = [];
             $('.category-once').each(function () {
                 i++;
                 if (this.checked)
                     categories.push($(this).val());
             });

             if (categories.length < i)
                 cbAllCat.prop('checked', false).checkboxradio('refresh');

             if (categories.length > 0)
                 catInput.val(JSON.stringify(categories));
             else
                 catInput.val('');

             catInput.trigger('change');
         }
     </script>

    <! DateTime********************************************************************************************************>
    <script>

         {% if race.dateTime is null %}
         defaultDate = "{{ race.competition.dateStart | date('Y-m-d') }}";
         defaultHour = 12;
         defaultMinute = 30;
         {% else %}
         defaultDate = "{{ race.dateTime | date('Y-m-d') }}";
         defaultHour = {{ race.dateTime | date('H') }};
         defaultMinute = {{ race.dateTime | date('i') }};
         {% endif %}


         myDatapiker({
             startDate: "{{ race.competition.dateStart | date('Y-m-d') }}",
             endDate: "{{ race.competition.dateEnd | date('Y-m-d') }}",
             defaultDate: defaultDate,
             defaultHour: defaultHour,
             defaultMinute: defaultMinute
         });
     </script>
 {% endblock %}
