{#
TO DO
    LOCATION FORM
    *suivant touche entrer
    *faire api a part pour renvoyer ville par département ou json => permet de mettre fichier Json a part
        actuellement impossible a cause asset
    *différencier label value

    GENERAL
    *Bouton validé actif que si tout les champs sont ok
    *pop-up votre compétition à bien été enregistrée
#}

{% extends 'form_layout.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block title %}
    {{ parent() }} Ajout compétition
{% endblock %}

{% block forms_content %}

    <div class="competition-form">
        {{ form_start(form, {'attr': {'data-toggle': 'validator', 'role':'form'}}) }}

        <!--Name-->
        <div class="form-group has-feedback ">
            <label class="control-label">Nom</label>
            {{ form_widget(form.name, {'attr': {'class':"form-control"}}) }}
            <div class="help-none with-errors">Entre 5 et 50 caractères alaphanumériques</div>
        </div>
        <hr>

        <!--Dates-->
        <label>Date</label>

        <div class="row">
            <!--DateStart-->
            <div class="form-group has-feedback col-lg-offset-1 col-sm-4">
                <label for="dateStart" class="control-label">Du</label>
                {{ form_widget(form.dateStart, {'attr': {'id' :'input-date-start', 'class':"form-control input-date-start", 'style':"display: none"}}) }}
                <div class="help-none with-errors"></div>
                <input class="form-control datepicker dpStart">
            </div>

            <!--DateEnd-->
            <div class="form-group has-feedback col-lg-offset-1 col-sm-4">
                <label class="control-label">Au</label>
                {{ form_widget(form.dateEnd, {'attr': { 'class':"form-control input-date-end", 'style':"display: none"}}) }}
                <div class="help-none with-errors"></div>
                <input class="form-control datepicker dpEnd">
            </div>
        </div>
        <hr>

        <!--Location-->
        <div class="form-group has-feedback ">
            <label class="control-label">Localisation</label>
            {{ form_widget(form.locationString, {'attr': { 'class':"form-control location-input", 'style':"display: none", 'minlength':"3"}}) }}
        </div>

        {% include('tools/form_location.html.twig') %}

        <!--Submit-->
        <div class="form-group">
            <button type="submit" class="btn btn-primary pull-right">Valider</button>
        </div>

        {{ form_end(form) }}

    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>

        //datepicker/////////////////////////////////////////////////////////////////////////////////////////////////
        var inputDateStart = $('.input-date-start');
        var inputDateEnd = $('.input-date-end');


        $('#truc').datepicker({
            language: 'fr',
            format: 'dd-mm-yyyy',
            todayBtn: 'linked',
            autoclose: true,
            todayHighlight: true
        });

        /*$('.datepicker').datepicker({
            language: 'fr',
            format: 'dd-mm-yyyy',
            todayBtn: 'linked',
            autoclose: true,
            todayHighlight: true
        });

        $('.dpStart').on('changeDate', function () {
            var startDate = parseDateFrToUs($('.dpStart').datepicker('getFormattedDate'));
            inputDateStart.val(startDate);
            inputDateStart.trigger('change');
            $('.dpEnd').datepicker(
                'setStartDate', $('.dpStart').datepicker('getDate')
            );
        });

        $('.dpEnd').on('changeDate', function () {
            var startDate = parseDateFrToUs($('.dpEnd').datepicker('getFormattedDate'));
            inputDateEnd.val(startDate);
            inputDateEnd.trigger('change');
            $('.dpStart').datepicker(
                'setEndDate', $('.dpEnd').datepicker('getDate')
            );
        });*/

        //IF UPDATE//////////////////////////////////////////////////////////////////////////////////////////////////

        {% if update is defined %}
        var cDateS = "{{ competition.dateStart }}";
        var cDateE = "{{ competition.dateEnd }}";
        var city = "{{ competition.location.city }}";
        var address = "{{ competition.location.street }}";
        var dep = "{{ competition.location.postCode }}";
        var x = "{{ competition.location.x }}";
        var y = "{{ competition.location.y }}";

        locationUpdate(dep, city, address, x, y);

        $('.dpStart').datepicker('update', parseDateUsToFr(cDateS));
        $('.dpEnd').datepicker('update', parseDateUsToFr(cDateE));

        {% endif %}

        //Tools//////////////////////////////////////////////////////////////////////////////////////////////////////

        function parseDateFrToUs(date) {

            var d = new Date(date.split("-").reverse().join("-"));
            var dd = ('0' + d.getDate()).slice(-2);
            var mm = d.getMonth() + 1;
            var mm = ('0' + mm).slice(-2);
            var yy = d.getFullYear();
            var newdate = yy + "-" + mm + "-" + dd;

            return newdate;
        }

        function parseDateUsToFr(date) {

            var d = new Date(date);
            var dd = ('0' + d.getDate()).slice(-2);
            var mm = d.getMonth() + 1;
            var mm = ('0' + mm).slice(-2);
            var yy = d.getFullYear();
            var newdate = dd + "-" + mm + "-" + yy;

            return newdate;
        }

    </script>

        <script src="{{ asset('tools/tools.js') }}"></script> <!-- For loader -->

        <! location form********************************************************************************************>
        <script src="{{ asset('js/jqueryui.min.js') }}"></script>
        <script>

            var outpout = $('.location-input');

            var depCode;
            var cityCode;
            var locationData;
            var locationDataIsValide = false;

            var locationAlert = $("#location_alert");
            var locationLabel = $("#location_label");
            var locationInput = $("#location_input");
            var locationBtn = $(".next_step_btn");

            $(document).ready(function () {
                nextStep('dep');
            });

            //Step**************************************************************
            function nextStep(step) {
                switch (step) {
                    case 'dep' :
                        depAutocomplete();
                        locationLabel.text('Département');
                        locationInput.attr("placeholder", "Ex : 06 Alpes-Maritimes");
                        locationBtn.val('depValidate');
                        loaderDivStop($("#location_form"));
                        break;

                    case 'depValidate' :
                        loaderDivStart($("#location_form"));
                        depValidate();
                        break;

                    case 'city' :
                        cityAutocomplete(depCode);
                        locationLabel.text('Ville');
                        locationInput.attr("placeholder", "Ex : nice");
                        locationBtn.val('cityValidate');
                        break;

                    case 'cityValidate' :
                        loaderDivStart($("#location_form"));
                        cityValidate();
                        break;

                    case 'address' :
                        addressAutocomplete(cityCode);
                        locationLabel.text('Adresse');
                        locationInput.attr("placeholder", "Ex : 5 Promenade des Anglais");
                        locationBtn.val('addressValidate');
                        loaderDivStop($("#location_form"));
                        break;

                    case 'addressValidate' :
                        addressValidate();
                        break;

                    case 'confirm' :
                        locationBtn.hide();
                        $('#location_form .form-group').hide();
                        locationConfirm();
                        break;
                }

                locationInput.focus();

            }

            function returnStep(step) {
                locationInput.val('');
                locationBtn.show();
                $('#location_form .form-group').show();
                $('.location_map').remove();
                locationDataIsValide = false;

                switch (step) {
                    case 'dep' :
                        $('.show_dep').remove();
                        depCode = '';

                    case  'city' :
                        $('.show_city').remove();
                        cityCode = '';

                    case  'address' :
                        $('.show_address').remove();
                        locationData = '';
                }
                nextStep(step);
                outpout.val('');
                outpout.trigger('change');
            }

            //Dep**************************************************************
            function depAutocomplete() {
                $.get("{{ asset('locationForm/departements2.json') }}", function (data, status) {
                    locationInput.autocomplete({
                        source: data
                    })
                });
            }

            function depValidate() {

                depCode = locationInput.val().slice(0, 2);
                locationAlert.hide();

                $.get("{{ asset('locationForm/departements3.json') }}", function (data, status) {
                    if (jQuery.inArray(depCode, data) !== -1) {
                        addShowElement(locationInput.val(), 'dep');
                        locationInput.val('');
                        nextStep('city');
                    } else {
                        nextStep('dep');
                        locationAlert.text('Veuillez sélectionner un département dans la liste');
                        locationAlert.show();
                    }

                });
            }

            //City*************************************************************
            function cityAutocomplete(dep) {
                $.ajax({
                    url: "{{ path('address_getCitiesSlugByDep') }}",
                    data: {dep: dep},
                    dataType: "json",
                    success: function (data) {
                        var cities = [];
                        $.map(data, function (item) {
                            cities.push(item.villeSlug);
                        });

                        locationInput.autocomplete({
                            source: cities
                        });

                        loaderDivStop($("#location_form"));
                    }
                });
            }

            function cityValidate() {
                var citySlug = locationInput.val();
                locationInput.val('');
                locationAlert.hide();

                $.ajax({
                    url: "{{ path('address_getCitiesData') }}",
                    data: {ville_slug: citySlug},
                    dataType: "json",
                    success: function (data) {
                        var cityData = data[0];

                        if (data.length > 0 && citySlug == cityData.villeSlug) {
                            addShowElement(cityData.villeNomReel, 'city');
                            cityCode = cityData.villeCodeCommune;
                            nextStep('address');
                        } else {
                            nextStep('city');
                            locationAlert.text('Veuillez sélectionner une commune dans la liste');
                            locationAlert.show();
                        }
                    }
                });

            }

            //Address**********************************************************
            function addressAutocomplete(cityCode) {
                locationInput.autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: "https://api-adresse.data.gouv.fr/search/?citycode=" + cityCode,
                            data: {q: request.term},
                            dataType: "json",
                            success: function (data) {
                                response($.map(data.features, function (item) {
                                    var truc = {label: item.properties.name, value: item.properties.name};
                                    return truc;
                                }));
                                autocompleteAddressList = data.features;
                            }
                        });
                    }
                });
            }

            function addressValidate() {
                $.ajax({
                    url: "https://api-adresse.data.gouv.fr/search/?citycode=" + cityCode,
                    data: {q: locationInput.val()},
                    dataType: "json",
                    success: function (data) {
                        if (data.features.length > 0 && data.features[0].properties.name == locationInput.val()) {
                            var locationFeatures = data.features[0];
                            addShowElement(locationFeatures.properties.name, 'address');
                            setLocationData(locationFeatures);
                            locationAlert.hide();
                            nextStep('confirm');
                        } else {
                            locationAlert.text('Veuillez sélectionner une adresse dans la liste');
                            locationAlert.show();
                            nextStep('address');
                        }
                    }
                });
            }

            //Confirm**********************************************************
            function locationConfirm() {
                var map = document.createElement("div");
                map.className = "location_map";
                map.setAttribute('id', 'location_map');
                $('.next_step_btn').before(map);
                locationDataIsValide = true;

                openLocationMap(locationData.x, locationData.y, 'location_map');

                outpout.val(JSON.stringify(locationData));
                outpout.trigger('change');
            }

            //Other************************************************************
            function addShowElement(text, step) {

                var div = document.createElement("div");
                div.className = "form_show row show_" + step;
                var txt = document.createElement("p");
                txt.append(text);
                txt.className = "col-xs-7";
                var btn = document.createElement("button");
                btn.className = "col-xs-2 edit_bt btn btn-success btn-xs";
                btn.append('Modifier');

                btn.onclick = function () {
                    returnStep(step);
                };

                div.append(txt);
                div.append(btn);

                $('#location_show').append(div);
            }

            function setLocationData(locationFeatures) {
                var f = locationFeatures;
                locationData = {
                    id: f.properties.id,
                    street: f.properties.name,
                    postCode: f.properties.postcode,
                    city: f.properties.city,
                    x: f.geometry.coordinates[1],
                    y: f.geometry.coordinates[0]
                }
            }

            function locationUpdate(dep, city, address, x, y) {
                locationBtn.hide();
                $('#location_form .form-group').hide();

                addShowElement(dep, 'dep');
                addShowElement(city, 'city');
                addShowElement(address, 'address');

                var map = document.createElement("div");
                map.className = "location_map";
                map.setAttribute('id', 'location_map');
                $('.next_step_btn').before(map);
                locationDataIsValide = true;

                openLocationMap(x, y, 'location_map');
            }

        </script>

        <! map leaflet**************************************************************************************************>
        <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
                integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
                crossorigin=""></script>
        <script>
            function openLocationMap(x, y, mapId) {
                var mymap = L.map(mapId).setView([x, y], 25);
                var marker = L.marker([x, y]).addTo(mymap);
                L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
                    maxZoom: 18
                }).addTo(mymap);
            }
        </script>


{% endblock %}
